<Window x:Class="WPFT_Training.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModel="clr-namespace:WPFT_Training.MainViewModel"
        mc:Ignorable="d"
        Title="Tradable Coins" Height="450" Width="1439">
    <Window.DataContext>
        <viewModel:MainViewModel/>
    </Window.DataContext>
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="60"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="150"/>
            <ColumnDefinition Width="150"/>
            <ColumnDefinition Width="100"/>
            <ColumnDefinition Width="50"/>
            <ColumnDefinition Width="20"/>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
            <Button IsEnabled="True" Content="Load Coins" HorizontalAlignment="Left" VerticalAlignment="Top" Width="130" x:Name="loadCoinsButton" Command="{Binding LoadCoinsCommand}"/>
            <Button IsEnabled="True" Content="Save Note" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Column="6" Width="120" Name="saveNoteButton" Command="{Binding SaveNoteCommand}"/>
        <DataGrid Grid.Row="1" Grid.ColumnSpan="7" HorizontalAlignment="Left" VerticalAlignment="Top" Name="coinsDataGrid" ItemsSource="{Binding CoinList}"
                  AutoGenerateColumns="False" AlternatingRowBackground="LightGray" ColumnWidth="*" CanUserAddRows="False" CanUserReorderColumns="False" 
                  ToolTipService.InitialShowDelay="1000" ToolTipService.ShowDuration="15000" ToolTipService.BetweenShowDelay="10000" SelectedItem="{Binding SelectedCoin}" ToolTip="{Binding GetCoinNote}" 
                  IsHitTestVisible="True">
         
            <DataGrid.Resources>

                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="ToolTip">
                                <Setter.Value>
                                    <TextBlock Text="{Binding GetCoinNote}"/>
                                </Setter.Value>
                            </Setter>
                            
                        </Trigger>
                    </Style.Triggers>
                </Style>
                 
                
                <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                    
                    <Setter Property="Background" Value="Gray"/>
                    <Setter Property="BorderBrush" Value="Black"/>
                    <Setter Property="BorderThickness" Value="0,0,1,0"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="Height" Value="30"/>
                </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Id" Binding="{Binding Id}" Width="100*"/>
                <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="100*"/>
                <DataGridTextColumn Header="Symbol" Binding="{Binding Symbol}" Width="100*"/>
                <DataGridTextColumn Header="Rank" Binding="{Binding Rank}" Width="100*"/>
                <DataGridTextColumn Header="Price_usd" Binding="{Binding Price_usd}" Width="100*"/>
                <DataGridTextColumn Header="Volume_usd_24h" Binding="{Binding Volume_usd_24h}" Width="100*" />
                <DataGridTextColumn Header="Market_cap_usd" Binding="{Binding Market_cap_usd}" Width="100*" />
                <DataGridTextColumn Header="Available_supply" Binding="{Binding Available_supply}" Width="100*" />
                <DataGridTextColumn Header="Total_supply" Binding="{Binding Total_supply}" Width="100*" />
                <DataGridTextColumn Header="Percent_change_1h" Binding="{Binding Percent_change_1h}" Width="100*" />
                <DataGridTextColumn Header="Percent_change_24h" Binding="{Binding Percent_change_24h}" Width="100*" />
                <DataGridTextColumn Header="Percent_change_7d" Binding="{Binding Percent_change_7d}" Width="100*" />
                <DataGridTextColumn Header="Last_updated" Binding="{Binding Last_updated}" Width="100*" />
            </DataGrid.Columns>
        </DataGrid>
        <ProgressBar Height="20" Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="100" Grid.Column="1" Name="loadingStatusPB" Minimum="0" Maximum="100" IsIndeterminate="True">
            <ProgressBar.Resources>
                <Style TargetType="ProgressBar">
                    <Setter Property="Visibility" Value="Hidden"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsLoadingCoins}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ProgressBar.Resources>
        </ProgressBar>
        <TextBlock Text="Loading Coins..." Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Top" Width="100">
            <TextBlock.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="Visibility" Value="Hidden"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsLoadingCoins}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Resources>
        </TextBlock>
        <TextBlock Grid.Column="2" HorizontalAlignment="Left" TextWrapping="Wrap" Text="Coin Rank from " VerticalAlignment="Top" Width="100" Height="20"/>
        <TextBox Grid.Column="3" HorizontalAlignment="Left" Height="20" TextWrapping="Wrap" Text="{Binding RankFrom, Mode=TwoWay}" VerticalAlignment="Top" Width="50"/>
        <TextBlock Grid.Column="4" HorizontalAlignment="Left" TextWrapping="Wrap" Text="to" VerticalAlignment="Top" Height="20" Width="20"/>
        <TextBox Grid.Column="5" HorizontalAlignment="Left" Height="20" TextWrapping="Wrap" Text="{Binding RankTo, Mode=TwoWay}" VerticalAlignment="Top" Width="50"/>
        <TextBox Grid.Column="5" HorizontalAlignment="Right" VerticalAlignment="Top" Width="300" Height="40" TextWrapping="Wrap" Text="{Binding CoinNote, Mode=TwoWay}"/>
    </Grid>
</Window>
